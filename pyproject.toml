[project]
name = "multi-cloud-manager"
version = "2.0.0"
description = "基于MCP的智能多云服务器管理系统，支持AWS、DigitalOcean、Vultr、阿里云"
authors = [
    {name = "rainhan99", email = "rainhan99@example.com"}
]
readme = "README_NEW.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["cloud", "server", "management", "aws", "digitalocean", "vultr", "alibaba", "mcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # MCP服务器框架
    "mcp>=1.0.0",
    
    # IP地址检测
    "requests>=2.25.0",
    
    # DigitalOcean SDK
    "pydo>=0.11.0",
    
    # AWS SDK
    "boto3>=1.26.0",
    "botocore>=1.29.0",
    
    # 阿里云SDK
    "alibabacloud-ecs20140526>=3.0.0",
    "alibabacloud-tea-openapi>=0.3.0",
    "alibabacloud-tea-util>=0.3.0",
    
    # 类型检查
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
# 开发依赖
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

# 性能优化依赖
performance = [
    "ujson>=5.0.0",
    "orjson>=3.8.0",
]

# 完整安装（包含所有可选依赖）
full = [
    "multi-cloud-manager[dev,performance]"
]

[project.urls]
Homepage = "https://github.com/rainhan99/cloud_manage_mcp_server"
Repository = "https://github.com/rainhan99/cloud_manage_mcp_server"
Issues = "https://github.com/rainhan99/cloud_manage_mcp_server/issues"
Documentation = "https://github.com/rainhan99/cloud_manage_mcp_server#readme"

[project.scripts]
multi-cloud-manager = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["providers", "utils"]

[tool.hatch.build.targets.sdist]
include = [
    "/providers",
    "/utils", 
    "/main.py",
    "/README_NEW.md",
    "/config.env.example",
]

# Black代码格式化配置
[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort导入排序配置
[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["providers", "utils"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy类型检查配置
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pydo.*",
    "alibabacloud_ecs20140526.*",
    "alibabacloud_tea_openapi.*",
    "alibabacloud_tea_util.*",
]
ignore_missing_imports = true

# pytest配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage配置
[tool.coverage.run]
source = ["providers", "utils", "main"]
omit = [
    "tests/*",
    "*/tests/*",
    "test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
